#N canvas 621 122 525 493 10;
#X obj 11 10 cnv 15 500 120 empty empty instrument_maker 10 22 0 40
-4032 -66577 0;
#X obj 22 60 cnv 15 478 40 empty empty im.smooth 20 22 0 30 -1 -196864
0;
#X obj 83 306 im.keypress Space;
#X obj 34 380 im.speaker;
#X text 22 110 Charles Matthews 2020;
#X obj 11 192 cnv 15 500 20 empty empty Arguments: 10 10 0 13 -203904
-66577 0;
#X obj 11 215 cnv 15 500 20 empty empty Inlets: 34 10 0 13 -204800
-66577 0;
#X obj 11 239 cnv 15 500 20 empty empty Outlets: 25 10 0 13 -204786
-66577 0;
#X text 21 171 comment, f 81;
#X obj 11 135 cnv 15 500 50 empty empty empty 25 10 0 13 -262130 -66577
0;
#X obj 9 431 cnv 15 500 50 empty empty empty 25 10 0 13 -262130 -66577
0;
#X text 16 142 Smooth out the edges of a signal \, with different timing
for upward or downward motion., f 81;
#X text 105 195 1) upward ramp time in milliseconds 2) downward ramp
time in ms, f 64;
#X text 106 241 1) smoothed signal;
#X obj 33 349 im.volume;
#X obj 34 279 im.noise;
#X obj 83 327 im.smooth 1000 100;
#X text 105 217 1) input signal to smooth;
#X text 16 432 For exerpienced users: im.smooth is designed to function
like rampsmooth~ in max or cyclone \, but can also be used like line.
This object still needs some work \; unlike rampsmooth~ \, at present
\, a change in direction completely overrides the previous trajectory.
, f 81;
#X connect 2 0 16 0;
#X connect 14 0 3 0;
#X connect 15 0 14 0;
#X connect 16 0 14 1;
